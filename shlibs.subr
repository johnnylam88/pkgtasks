# $NetBSD$
#
# Copyright (c) 2017 The NetBSD Foundation, Inc.
# All rights reserved.
#
# This code is derived from software contributed to The NetBSD Foundation
# by Johnny C. Lam.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
# TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
# PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
# BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
# CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
# SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
# POSSIBILITY OF SUCH DAMAGE.
#
# NAME
#	shlibs.subr -- update the shared library cache
#
# SYNOPSIS
#	task_shlibs add | remove
#
# DESCRIPTION
#	The task_shlibs function supports two actions: "add" and "remove".
#
#	Both the "add" and "remove" actions rebuild the system database
#	of run-time library search paths so that the system can find the
#	package's shared libraries.
#
# RETURN VALUES
#	Returns 0 on success, and >0 if an error occurs.
#
# ENVIRONMENT
#	The following variables are used if they are set:
#
#	LDCONFIG
#		The name or path to the ldconfig(8) utility.
#
#	PKGNAME
#		The name of the package.
#

__task_shlibs__="yes"

task_load echo

task_shlibs()
{
	: ${LDCONFIG:=ldconfig}

	: ${PKGNAME:=${0##*/}}

	local action="$1"; shift
	case $action in
	add|remove)
		task_echo -bc "  > ${PKGNAME}: run-time library search paths" ;;
	*)	return 0 ;;
	esac

	local result=0
	case $action in
	add)	${LDCONFIG} >/dev/null 2>&1 || result=1 ;;
	remove)	${LDCONFIG} >/dev/null 2>&1 || result=1 ;;
	esac

	if [ $result -eq 0 ]; then
		task_echo "    > database rebuilt"
	else
		task_echo "    ! database not rebuilt"
	fi
	return $result
}
